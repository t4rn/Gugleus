@model RequestListVM

@{
    ViewData["Title"] = Model.Description;
}

<h2>@Model.Description</h2>

<br />

<div class="dropdown">
    <span>Requests per page </span>
    <button class="btn btn-default dropdown-toggle" type="button" id="cbRequestsPerPage" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
        All
        <span class="caret"></span>
    </button>
    <ul class="dropdown-menu" aria-labelledby="requestsPerPage">
        <li><a href="#">20</a></li>
        <li><a href="#">50</a></li>
        <li><a href="#">100</a></li>
        <li role="separator" class="divider"></li>
        <li><a href="#">All</a></li>
    </ul>
</div>

<br />
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].WsClient)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].RequestType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].Queue.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].Input)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].Output)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].AddDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].OutputDate)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Requests) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WsClient)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Queue.Status)
            </td>
            <td>
                @item.InputShort(20)
                @*@Html.DisplayFor(modelItem => item.InputShort(20))*@
            </td>
            <td>
                @item.OutputShort(20)
                @*@Html.DisplayFor(modelItem => item.OutputShort(20))*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OutputDate)
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new {  id=item.Id }) |*@
                @Html.ActionLink("Details", "Details", routeValues: new {  id=item.Id, env = Model.Env  },
                htmlAttributes: new { @class = "btn btn-info btn-sm" })
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Request navigation">
    <ul class="pagination">
        <li class="disabled"><a href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
        <li class="active"><a href="#">1 <span class="sr-only">(current)</span></a></li>
        <li><a href="#">2 <span class="sr-only">(current)</span></a></li>
        <li><a href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></a>
        </li>
    </ul>
</nav>
